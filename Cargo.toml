[package]
name = "steam_server_disable"
# # NOTE
#
# When updating the version, update the following
#
# * `package.metadata.wix.version`
#
# * CHANGELOG.md
version = "0.2.7"
authors = ["ishbosamiya <ishbosamiya@gmail.com>"]
edition = "2021"
readme = "README.md"
description = "A GUI tool to block access to Steam (CSGO/Dota) servers region-wise."
homepage = "https://github.com/ishbosamiya/steam_server_disable"
repository = "https://github.com/ishbosamiya/steam_server_disable"
keywords = ["steam", "firewall", "gui"]
publish = false

[package.metadata.wix]
upgrade-guid = "346463D7-CAA7-4E85-BA1E-19B5A82EA7FC"
path-guid = "9DDA6A2E-F90F-4CCA-A0B5-69468AF1804B"
shortcut-guid = "1ACFF61E-4E43-45CD-8259-E93CB49DF229"
# NOTE: update `package.version` as well
#
# requires separate version because `+dev` syntax isn't supported by
# wix
version = "0.2.7"
license = false
eula = false

[[bin]]
name = "steam_server_disable"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
curl = "0.4"
# `openssl-sys`'s version depends on `curl`'s version
#
# `openssl-sys` has feature `vendored` so that it gets statically
# linked, otherwise `libssl1.1` is required which not all systems have
#
# reference: <https://github.com/cross-rs/cross/wiki/Recipes#vendored>
openssl-sys = { version = "0.9", features = ["vendored"] }
egui_glfw = { version = "0.6.1", git = "https://github.com/ishbosamiya/egui_glfw.git", branch = "v0.6.1-release" }
glfw = "0.55"
gl = "0.14"
icmp-socket = "0.2"
log = "0.4"
env_logger = "0.10"
lazy_static = "1.4"
directories = "4.0"
regex = "1.10"
clap = { version = "4.0", features = ["derive", "env"] }

[patch.crates-io]
# reason for `glfw-sys` patch, `glfw-sys` has linker errors on windows
# without this patch due to `CMAKE_MSVC_RUNTIME_LIBRARY` not being
# defined for `MultiThreaded`
glfw-sys = { git = "https://github.com/ishbosamiya/glfw-sys.git" }

[target.'cfg(unix)'.dependencies]
iptables = "0.4.3"
sudo = "0.6"

[target.'cfg(windows)'.dependencies]
is_elevated = "0.1"

[profile.release-with-symbols]
inherits = "release"
debug = true

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.13.1"
# CI backends to support
ci = ["github"]
# The installers to generate for each app
installers = ["shell", "msi"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["x86_64-unknown-linux-gnu", "x86_64-pc-windows-msvc"]
# Publish jobs to run in CI
pr-run-mode = "plan"
# Whether to install an updater program
install-updater = false
# Whether to consider the binaries in a package for distribution (defaults true)
dist = true
# Whether CI should trigger releases with dispatches instead of tag pushes
dispatch-releases = true
# Skip checking whether the specified configuration files are up to date
allow-dirty = ["msi"]

# `linux` build dependencies
[workspace.metadata.dist.dependencies.apt]
cmake = "*"
libxrandr-dev = "*"
xorg-dev = "*"
